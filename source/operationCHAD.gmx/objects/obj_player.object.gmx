<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_actor</parentName>
  <maskName>msk_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

debug_draw = -1;
debug_freeze = false;

gamepad_slot = 0;

// player move states
enum mState
    {
    idle,
    walk,
    lock,
    duck,
    hang,
    climb,
    dead
    }

// animation state
enum aState
    {
    idle,
    walk,
    drop,
    roll,
    duck,
    hang,
    climb,
    dead
    }

// player skins
enum skin
    {
    pepe,
    stonetoss,
    foxford,
    yoloswag,
    pumpkinhead
    }

// player motion state/flags
move_state = mState.walk;
on_ground = false;
on_ramp = false;
ramp_slope = 1;
climb_side = 0;
grace_jump = 0; // 6
no_hang_time = 0; // 12
drop = false;

// player position/physics
grav = 0.4;
fric = 1;
MOVEspe=2;
xspeed = 0;
yspeed = 0;
subx = 0;
suby = 0;
xpre = x;
ypre = y;

// player orientation
aim = 0;
dir = 1;

// player weapon
weapon_stats();
cur_weapon = weapon.rifle;
shoot_timer = 0;
flame_ang = 0;
gun_y = -18;

// death/respawn
dead_timer = 120;
xstart = x;
ystart = y;

// player animation
player_skin = skin.yoloswag;
anim_state = aState.idle;
anim_slope = 0;
full_sprite = false;
full_sprite_index = -1;
full_index = 0;
leg_sprite_index = -1;
leg_index = 0;
arm_sprite_index = -1;
arm_index = 0;

leg_y = 0;
arm_y = 0;
walk_y[0] = 0;
walk_y[1] = -1;
walk_y[2] = -3;
walk_y[3] = -3;
walk_y[4] = -2;
walk_y[5] = 0;
walk_y[6] = -1;
walk_y[7] = -3;
walk_y[8] = -3;
walk_y[9] = -2;
leg_dir = 1;
arm_dir = 1;
full_dir = 1;

update_skin(player_skin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (debug_freeze)
    exit;

input();
apply_gravity();
apply_input();
animate();
collide();

// weapon
if (shoot_timer &gt; 0)
    shoot_timer--;
if (cur_weapon == 3) and (flame_ang != aim)
    flame_ang -= clamp(angle_difference(flame_ang,aim),-10,10);

// dead
if (move_state == mState.dead)
    {
    if (dead_timer &gt; 0)
        dead_timer--;
    else
        {
        move_state = mState.walk;
        dead_timer = 120;
        drop = true;
        if (instance_exists(obj_camera))
            {
            if (point_in_rectangle(xstart,ystart,view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0]))
                {
                x = xstart;
                y = ystart;
                }
            else
                {
                x = view_xview[0]+64;
                y = view_yview[0];
                }
            }
        else
            {
            x = xstart;
            y = ystart;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemy_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit

if (team == other.team) or (nohit)
    exit;

if (move_state != mState.dead)
    {
    move_state = mState.dead;
    on_ground = false;
    xspeed = sign(x-other.x)*2;
    yspeed = -8;
    
    //with(other)
    //    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit

if (team == other.team) or (!other.killOnContact) or (nohit)
    exit;

if (move_state != mState.dead)
    {
    move_state = mState.dead;
    on_ground = false;
    xspeed = sign(x-other.x)*2;
    yspeed = -8;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (debug_draw &gt; -1)
    {
    if (debug_draw == 0)
        draw_sprite_ext(full_sprite_index,full_index,x,y,full_dir,1,0,-1,1);
    else if (debug_draw == 1)
        draw_sprite_ext(leg_sprite_index,leg_index,x,y+leg_y,leg_dir,1,0,-1,1);
    else if (debug_draw == 2)
        draw_sprite_ext(arm_sprite_index,arm_index,x,y+arm_y+walk_y[leg_index],arm_dir,1,0,-1,1);
    exit;
    }

if (full_sprite)
    draw_sprite_ext(full_sprite_index,full_index,x,y,full_dir,1,0,-1,1);
else
    {
    draw_sprite_ext(leg_sprite_index,leg_index,x,y+leg_y,leg_dir,1,0,-1,1);
    draw_sprite_ext(arm_sprite_index,arm_index,x,y+arm_y+walk_y[leg_index],arm_dir,1,0,-1,1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>baby_crawl_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>par_shootable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0;
image_index = 0;

//JB stuff

life=4

INIT=0
JUMP=1
CRAWL=2
FLY=3

state=INIT

//just giving the object a moment to initialize, then onto the starting jump
alarm[0]=2

//1=bottom, -1=top, is assigned by the coller/spawner
FLIP=1




//speed of starting jump
JUMPspe=2

//speed pulling the baby vertically when jumping
grav=0.1


//speed of crawling/horizonal movement
CRAWLspe=1

//speed of flying
FLYspe=1


//past this x, start entertaining the idea of flying vertically
FLYx=180


//for bottom spawning babies, this is the y they snap to on the floor
BOTTOM=210

//for top spawning babies, this it the y the cling too on the ceiling
TOP=10

//the larger the number the less likely to fly
FLYodds=50
//

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//start jumping

hspeed=-CRAWLspe

//note that multiplying by FLIP determines if its going up or down
vspeed=-JUMPspe*FLIP

state=JUMP

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//destroy if out of view
if(x&lt;view_xview[0]-32)
    instance_destroy()

//hit ground
if(state=JUMP){

if(FLIP=1){

    //simulating gravity
    motion_add(270,grav)

    //when baby has hit bottom, snap to BOTTOM y and go to CRAWL state
    if(vspeed&gt;0)
    if(y&gt;=BOTTOM){
        y=BOTTOM
        vspeed=0
        state=CRAWL
        }
    }
    
    
if(FLIP=-1){

    //simulating gravity
    motion_add(90,grav)

    //when baby has hit bottom, snap to BOTTOM y and go to CRAWL state
    if(vspeed&lt;0)
    if(y&lt;=TOP){
        y=TOP
        vspeed=0
        state=CRAWL
        }
    }

}

//if past the FLYx, roll to see flying is an outcome

if(x&gt;obj_player.x)
if(x&lt;FLYx)
if(state=CRAWL){

    //this is a very inelegant way to check how many other babies are flying at this moment. If there's too many, no flying permit
    //will the baby be able to fly
    var FLYINGpermit=false
    
    //number of flying babies to be added up
    var FLYnum=0;
    
    //tell each baby to count itself towards the total if its flying
    with(baby_enemy){
        if(state=FLY)
            FLYnum+=1
        }
            
    /*Now the FLYnum var has the number of flying babies, we check that number against the number the embro controller has
    to cap the number of babies flying, if there aren't too many, this baby gets its flying permit
    */
    if(FLYnum&lt;=embro_controller.FLYmax)
        FLYINGpermit=true
    
    if(FLYINGpermit=true)
    if(random(FLYodds)&lt;1)
        {
        vspeed=FLYspe*-FLIP
        state=FLY
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//getting hit with bullet

with(other)
    instance_destroy()
    
life-=1

if(life&lt;=0)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_yscale=FLIP

if(state=JUMP)
sprite_index=baby_jump_spr

if(state=CRAWL)
or
state=FLY
sprite_index=baby_crawl_spr


draw_sprite_ext(sprite_index,image_index,x,y,1,FLIP,0,-1,image_alpha);

//draw_text(x,y-20,vspeed)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

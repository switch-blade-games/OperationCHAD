<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.vtime = 0;
global.ctime = 0;

debug = false;
debugMode = 0; // 0=detail; 1=simple; 2=extra;
mockup = false;
event_user(0);

surf_graph = -1;
graph_w = 120;
graph_h = 40;
graph_ind = 0;
fps_num = 60;
fps_ind = 0;
for(var i=fps_num-1; i&gt;=0; i--;)
    fps_avg[i] = 0;
avg_fps = 0;
max_fps = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// smooth fps stats
if (fps_real &gt; max_fps)
    max_fps = fps_real;
fps_avg[fps_ind] = fps_real;
avg_fps += fps_avg[fps_ind];
fps_ind++;
if (fps_ind &gt;= fps_num)
    fps_ind = 0;
avg_fps -= fps_avg[fps_ind];

// toggle debug mode
if (keyboard_check_pressed(vk_f1))
    {
    debugMode++;
    if (debugMode &gt; 2)
        debugMode = -1;
    debug = (debugMode &gt; -1);
    if (!debug)
        {
        with(par_actor)
            nohit = false;
        }
    }
// toggle player mockup mode
if (keyboard_check_pressed(vk_f2))
    {
    mockup = !mockup;
    if (mockup) and (!instance_exists(player_mockup))
        instance_create(0,0,player_mockup);
    else if (!mockup) and (instance_exists(player_mockup))
        instance_destroy(player_mockup);
    }

// don't hurt player in debug mode
if (debug)
    {
    with(par_actor)
        nohit = true;
    }

// next room
if (keyboard_check_pressed(vk_pageup))
    {
    if (room_exists(room_next(room)))
        {
        room_goto(room_next(room));
        mus_stop();
        }
    }
// previous room
if (keyboard_check_pressed(vk_pagedown))
    {
    if (room_exists(room_previous(room))) and (room != menu_room)
        {
        room_goto(room_previous(room));
        mus_stop();
        }
    }

// change weapons
for(var i=0; i&lt;10; i++;)
    {
    if (keyboard_check_pressed(vk_numpad0+i))
        {
        if (instance_exists(obj_player))
            obj_player.cur_weapon = clamp(i,0,obj_player.weapons);
        }
    }

// restart
if (keyboard_check_pressed(ord("R")))
    {
    mus_stop();
    with(obj_shader)
        instance_destroy();
    instance_destroy();
    game_restart()
    }

// end
if (keyboard_check_pressed(vk_escape))
    game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.yshake=20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// output OS info for debugging
var file = file_text_open_write(working_directory+"debug.txt");

file_text_write_string(file,"[OS]");
file_text_writeln(file);
file_text_write_string(file,string(val_to_text(4,os_type)));
file_text_writeln(file);
file_text_write_string(file,"[VERSION]");
file_text_writeln(file);
file_text_write_string(file,string(os_version));
file_text_writeln(file);

var info_map = os_get_info();
if (info_map &gt; -1)
    {
    var key = ds_map_find_first(info_map);
    while(key != undefined)
        {
        file_text_write_string(file,"["+string_upper(string(key))+"]");
        file_text_writeln(file);
        file_text_write_string(file,string_upper(string(info_map[?key])));
        file_text_writeln(file);
        
        key = ds_map_find_next(info_map,key);
        }
    }

file_text_close(file);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (debug)
    {
    var vx = view_xview[0];
    var vy = view_yview[0];
    
    // smooth fps graph
    if (surface_exists(surf_graph))
        surface_set_target(surf_graph);
    else
        {
        surf_graph = surface_create(graph_w,graph_h);
        surface_set_target(surf_graph);
        draw_clear($000000);
        }
    
    // fade to black
    if (graph_ind &amp; 7 == 4)
        {
        draw_set_color($000000);
        draw_set_alpha(1/8);
        draw_rectangle(0,0,graph_w,graph_h,0);
        draw_set_alpha(1);
        }
    
    // draw current graph line
    draw_set_color($FFFFFF);
    draw_line(graph_ind,graph_h,graph_ind,graph_h-(max(0,1500-fps_avg[graph_ind mod 60])/3000)*graph_h);
    graph_ind++;
    if (graph_ind &gt; graph_w)
        graph_ind = 0;
    
    surface_reset_target();
    
    switch(debugMode)
        {
        case 0: // hitboxes
            draw_set_color(c_blue);
            with(par_actor)
                draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
            draw_set_color(c_red);
            with(par_enemy)
                draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
            draw_set_color(c_yellow);
            with(par_projectile)
                draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
            draw_set_color(c_fuchsia);
            with(par_solid)
                draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
            with(par_jt)
                draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
            with(par_mb)
                draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
            draw_set_color(c_lime);
            with(par_verlet)
                draw_point(x,y);
            break;
        
        case 1: // simple
            draw_set_color($000000);
            draw_rectangle(vx+400-(graph_w+4+1),vy+4-1,vx+400-4,vy+4+graph_h,0);
            draw_surface(surf_graph,vx+400-(graph_w+4),vy+4);
            draw_text((vx+400)-(graph_w+4),vy+4+graph_h+4,"FPS: "+string(round(avg_fps/fps_num)));
            break;
            
        case 2: // detailed
            var inst_num = 0;
            inst_num += instance_number(par_solid);
            inst_num += instance_number(par_jt);
            inst_num += instance_number(par_mb);
            inst_num += instance_number(par_actor);
            inst_num += instance_number(par_enemy);
            inst_num += instance_number(par_shootable);
            inst_num += instance_number(par_projectile);
            
            var part_num = 0;
            part_num += instance_number(par_effect);
            
            var rope_num = 0;
            rope_num += instance_number(par_verlet);
            
            if (!instance_exists(player_mockup))
                {
                draw_set_halign(0);
                draw_set_valign(0);
                draw_text_outline(vx+4,vy+4+00,"Version: "+string(global.version));
                draw_text_outline(vx+4,vy+4+12,"Instances: "+string(inst_num));
                draw_text_outline(vx+4,vy+4+24,"Particles: "+string(part_num));
                if (instance_exists(obj_player))
                    draw_text_outline(vx+4,vy+4+36,"Gamepad Slot: "+string(obj_player.gamepad_slot));
                //draw_text_outline(vx+4,vy+4+36,"Segments: "+string(rope_num)+" ["+string(round(global.vtime))+"ms]");
                draw_text_outline(vx+4,vy+4+48,"CamPos: "+string(vx)+"/"+string(vy)+" ["+string(round(global.ctime))+"ms]");
                draw_set_color($000000);
                draw_rectangle(vx+400-(graph_w+4+1),vy+4-1,vx+400-4,vy+4+graph_h,0);
                draw_surface(surf_graph,(vx+400)-(graph_w+4),vy+4);
                draw_text_outline((vx+400)-(graph_w+4),vy+4+graph_h+4,"FPS: "+string(round(avg_fps/fps_num)));
                }
            break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(stage_finish)=1)
exit

room_goto_next()

exit

if(instance_number(screen_explode)=0){

instance_create(0,0,screen_explode)

exit

}


with(screen_explode)
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

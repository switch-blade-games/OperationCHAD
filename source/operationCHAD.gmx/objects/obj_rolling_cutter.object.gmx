<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rolling_cutter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_actor_projectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_speed = 0;

damage = 1;

FALL = 0;
ROLL = 1;
state = FALL;

// tuners
gravity = 0.4;
roll_speed = 6;
fall_speed = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index += (hspeed/22)*8; // 22 is the sprite's circumference
image_angle = 0;

switch(state)
    {
    case FALL:
        if (place_meeting(x,y+vspeed,par_solid))
        or (place_meeting(x,y+vspeed,par_jt) and (!position_meeting(x,bbox_bottom,par_jt)) and vspeed &gt;= 0)
            {
            state = ROLL;
            gravity = 0;
            vspeed = 0;
            
            y = round(y);
            while((!place_meeting(x,y+1,par_solid)) and (!position_meeting(x,bbox_bottom,par_jt)))
                y++;
            }
        else if (vspeed &gt; fall_speed)
            vspeed = fall_speed;
        break;
    
    case ROLL:
        if (hspeed &gt; 0) and (hspeed &gt; roll_speed)
            hspeed--;
        else if (hspeed &lt; 0) and (hspeed &lt; -roll_speed)
            hspeed++;
        else if (hspeed == 0)
            instance_destroy();
        break;
    }

if (place_meeting(x+hspeed,y-1,par_solid))
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

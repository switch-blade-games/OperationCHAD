<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cam_icon_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>par_stay_active</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BUFFER=true

alarm[0]=60

/*
//state list
RIGHT=1
DIAGUP=2
DOWN=3
DIAGDOWN=4
JOGUP=5
RJOG=6
LOCKED=7
DOWN=8
DJOG=9
RJOGPLAYER=10
*/
define_cam_states()


state=RIGHT


//movement speeds
JOGspe=2
DJOGspe=10



RJOGx=0

Ydist=0




Xset=obj_player.x

Ycurrent=0

//factory y sequencing
Yfactory[0]=1460
Yfactory[1]=1280
Yfactory[2]=2660



if(room=final_factory)
Yset=Yfactory[Ycurrent]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BUFFER=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state=RIGHT){
Rfollow(180)

Yset=Yfactory[Ycurrent]


x=round(Xset)
y=round(Yset)

}


if(state=DIAGUP){

Rfollow(180)
Yfollow(120)

x=round(Xset)
y=round(Yset)

}

if(state=JOGUP){

Rfollow(180)

    y-=JOGspe
    
    
    if(y&lt;=Yfactory[Ycurrent]){
        y=Yfactory[Ycurrent]
        state=RIGHT
    }
    
    x=round(Xset)
}

if(state=RJOG){

    x+=JOGspe
    
    Yset=Yfactory[Ycurrent]
    
    if(x&gt;=RJOGx){
        x=RJOGx
            state=LOCKED
            }

    
        
    y=round(Yset)

}

if(state=DJOG){

    y+=DJOGspe
    
    if(y&gt;=obj_player.y-120){
        y=obj_player.y-120
        state=DOWN
    }
}

if(state=DOWN){

if(obj_player.y-120&gt;y)
    y=obj_player.y-120
}



if(state=RJOGPLAYER){

    x+=JOGspe
    
    Yset=Yfactory[Ycurrent]
    
    if(x&gt;=obj_player.x-180){
        x=obj_player.x-180
        Rfollow(180)
            state=RIGHT
            }

    
        
    y=round(Yset)

}


if(state=RDEAD){

Yset=Yfactory[Ycurrent]

if(obj_player.x&gt;view_xview[0]+180){
    Rfollow(180)
    state=RIGHT
}

y=round(Yset)

}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview[0]=round(x)
view_yview[0]=round(y)

draw_text(view_xview[0]+40,view_yview[0]+40,Ycurrent)

draw_text(view_xview[0]+40,view_yview[0]+50,instance_number(dev_cheater))

draw_text(view_xview[0]+40,view_yview[0]+60,Yfactory[Ycurrent])

draw_text(view_xview[0]+40,view_yview[0]+70,global.CHECKPOINT)


if(BUFFER=true){

    draw_set_color(global.DARKpurple)
    draw_rectangle(view_xview[0]-20,view_yview[0]-20,view_xview[0]+400+20,view_yview[0]+240+20,false)
    draw_set_color(c_white)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cam_icon_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>par_stay_active</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>define_cam_states()

alarm[0] = 2;
BUFFER=true

if (room_width == 400)
and (room_height = 240)
    state = LOCKED;
else
    state = RIGHT;

//movement speeds
JOGspe=2
DJOGspe=10

RJOGx=0
Ydist=0

if (instance_exists(par_actor))
    Xset = obj_player.x;
else
    Xset = 0;
    
Ycurrent = 0;
if (room == final_factory)
    {
    // factory sequencing
    MYarray[0] = 1460;
    MYarray[1] = 1280;
    MYarray[2] = 2660;
    }
else if (room == clown_room)
    {
    // clown world sequencing
    MYarray[0] = 19600;
    }
else if (room == pooh_stage)
    {
    // pooh sequencing
    MYarray[0] = 240;
    }
else if (room == comix_zone_room)
    {
    // comix zone sequencing
    MYarray[0] = 520;
    }
else
    MYarray[0] = 0;

Yset = MYarray[Ycurrent];

// audio listener
var ear_x = view_xview[0]+view_wview[0]/2;
var ear_y = view_yview[0]+view_hview[0]/2;
audio_falloff_set_model(audio_falloff_exponent_distance);
audio_listener_position(ear_x,ear_y,0);
audio_listener_orientation(ear_x,ear_y,1000,0,-1,0);
audio_listener_velocity(0,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BUFFER = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
    {
    case RIGHT:
        Rfollow(180)
        Yset=MYarray[Ycurrent]
        x=round(Xset)
        y=round(Yset)
        break;

    case DIAGUP:
        Rfollow(180)
        Yfollow(120)
        x=round(Xset)
        y=round(Yset)
        break;

    case JOGUP:
        Rfollow(180)
        y-=JOGspe
        if(y&lt;=MYarray[Ycurrent]){
            y=MYarray[Ycurrent]
            state=RIGHT
        }
        x=round(Xset)
        break;

    case RJOG:
        Yset=MYarray[Ycurrent]
        x+=JOGspe
        if(x&gt;=RJOGx){
            x=RJOGx
            state=LOCKED
            }
        y=round(Yset)
        break;
    
    case DJOG:
        y+=DJOGspe
        if(y&gt;=obj_player.y-120){
            y=obj_player.y-120
            state=DOWN
        }
    break;

    case DOWN:
        if(obj_player.y-120&gt;y)
            y=obj_player.y-120
        break;
    
    case RJOGPLAYER:
        Yset=MYarray[Ycurrent]
        x+=JOGspe
        if(x&gt;=obj_player.x-180){
            x=obj_player.x-180
            Rfollow(180)
            state=RIGHT
            }
        y=round(Yset)
        break;
    
    case RDEAD:
        Yset=MYarray[Ycurrent]
        if(obj_player.x&gt;view_xview[0]+180){
            Rfollow(180)
            state=RIGHT
        }
        y=round(Yset)
        break;
    }
    
// apply screenshake
cam_x = x+global.xnudge;
cam_y = y+global.ynudge;
if (global.xshake &gt; 1)
    cam_x += random_range(-global.xshake,global.xshake);
if (global.yshake &gt; 1)
    cam_y += random_range(-global.yshake,global.yshake);

view_xview[0] += (cam_x-view_xview[0])*0.25;
view_yview[0] += (cam_y-view_yview[0])*0.25;
view_xview[0] = round(view_xview[0]);
view_yview[0] = round(view_yview[0]);

// decay screenshake values
global.xnudge *= 0.8;
global.ynudge *= 0.8;
global.xshake *= 0.8;
global.yshake *= 0.8;

// move audio listener to camera position
var ear_x = view_xview[0]+view_wview[0]/2;
var ear_y = view_yview[0]+view_hview[0]/2;
audio_listener_position(ear_x,ear_y,0);
audio_listener_orientation(ear_x,ear_y,1000,0,-1,0);
audio_listener_velocity(0,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(view_xview[0]+40,view_yview[0]+40,Ycurrent)
//draw_text(view_xview[0]+40,view_yview[0]+50,instance_number(dev_cheater))
//draw_text(view_xview[0]+40,view_yview[0]+60,MYarray[Ycurrent])
//draw_text(view_xview[0]+40,view_yview[0]+70,global.CHECKPOINT)


if(BUFFER){
    draw_set_color(global.DARKpurple)
    draw_rectangle(view_xview[0]-20,view_yview[0]-20,view_xview[0]+400+20,view_yview[0]+240+20,false)
    draw_set_color(c_white)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

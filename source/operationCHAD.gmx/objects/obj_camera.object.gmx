<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_wview[0]/2;
y = view_hview[0]/2;

enum camState
    {
    static = 0,
    right = 1,
    up = 2,
    left = 4,
    down = 8,
    free = 15
    }

cam_state = camState.right;
target = obj_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview[0] += ((x-view_wview[0]/2)-view_xview[0])*0.2;
view_yview[0] += ((y-view_hview[0]/2)-view_yview[0])*0.2;
view_xview[0] = round(view_xview[0]); // view_xview[0] = round(view_xview[0]+random_range(-global.xshake,global.xshake));
view_yview[0] = round(view_yview[0]); // view_yview[0] = round(view_yview[0]+random_range(-global.yshake,global.yshake));

//disabling screenshake for now

global.xshake += (0-global.xshake)*0.25;
global.yshake += (0-global.yshake)*0.25;

if (!instance_exists(target)) or (cam_state == 0)
    exit;

xprevious = x;
yprevious = y;
if (cam_state &amp; camState.right == camState.right) and (target.x &gt; x)
    x = target.x;
if (cam_state &amp; camState.up == camState.up) and (target.y &lt; y)
    y = target.y;
if (cam_state &amp; camState.left == camState.left) and (target.x &lt; x)
    x = target.x;
if (cam_state &amp; camState.down == camState.down) and (target.y &gt; y)
    y = target.y;

var inst = instance_nearest(x,y,obj_camera_path);
if (inst != noone) and (instance_exists(inst))
    {
    if (inst.active)
        {
        if ((cam_state &amp; camState.right == camState.right) and x &gt;= inst.x and xprevious &lt; inst.x)
        or ((cam_state &amp; camState.up == camState.up) and y &lt;= inst.y and yprevious &gt; inst.y)
        or ((cam_state &amp; camState.left == camState.left) and x &lt;= inst.x and xprevious &gt; inst.x)
        or ((cam_state &amp; camState.down == camState.down) and y &lt;= inst.y and yprevious &lt; inst.y)
            {
            cam_state = ds_map_find_value(inst.propmap,"cam_state");
            inst.active = false;
            x = inst.x;
            y = inst.y;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>catfish_body_2_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RISE=1
BOB=2
CATCH=3
STOP=4
DOWN=5
PULL=6

LOSEHOOK=7

WAIT=8

DONEFISHIN=false

PULLmax=4

PULLnum=0





SEGS=6

var i=0;

var ME=id;

repeat(SEGS){

    SEG[i]=instance_create(x,y,fishing_seg)
    
    with(SEG[i]){
        event_perform(ev_create,0)
        dad=ME
        
        MYdepth=i
    }
    
    //the order of these are reversed
    
    
    //tail
    if(i=0)
    SEG[i].sprite_index=catfish_body_5_spr
    
    
    
    if(i=1)
    SEG[i].sprite_index=catfish_body_4_spr
    
    if(i=2)
    SEG[i].sprite_index=catfish_body_3_spr
    
    //2 is done twice
    if(i=3)
    SEG[i].sprite_index=catfish_body_2_spr
    
    if(i=4)
    SEG[i].sprite_index=catfish_body_2_spr
    
    //
    
    if(i=5)
    SEG[i].sprite_index=catfish_body_1_spr
    
    i+=1
    
}



LENmax=110

CURVEup=1
CURVEdown=2

CURVEstate=CURVEup

CURVEmaxUP=4
CURVEmaxDOWN=1

CURVErate=0.2

CURVE=0

BASEang=120


state=RISE

motion_set(BASEang,2)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state=PULL
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state=DOWN
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///make fishing pole

instance_create(x,y+80,fishing_pole)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//curves goes up and down

if(state=BOB){

if(CURVEstate=CURVEup){

    CURVE+=CURVErate
    if(CURVE&gt;=CURVEmaxUP){
        
        CURVEstate=CURVEdown
        }
}

if(CURVEstate=CURVEdown){
    CURVE-=CURVErate
    if(CURVE&lt;=-CURVEmaxDOWN){
    
        CURVEstate=CURVEup
        
    }
}

}

if(state=DOWN){

    CURVE+=CURVErate/2
    
    if(PULLnum&gt;0)
    fishing_pole.image_angle+=CURVErate*10
    
    
    if(CURVE&gt;=CURVEmaxUP){
    
    if(DONEFISHIN=true){
    
    state=LOSEHOOK
    
    
    //code that applies to fishing hook getting busted
    with(fishing_hook){
    
        state=BUSTED
        alarm[0]=2
        }
    
    }
    
    if(DONEFISHIN=false){
        state=WAIT
        alarm[2]=180
        }
        
        
        
        
        
        }

    
}

if(state=PULL){

    CURVE-=CURVErate
    fishing_pole.image_angle-=CURVErate*10
    if(CURVE&lt;=-CURVEmaxDOWN){
    
    PULLnum+=1
    if(PULLnum&lt;PULLmax){
    
        state=DOWN
        PULLnum+=1
        }
        
        if(PULLnum=PULLmax){
        DONEFISHIN=true
        state=DOWN
        }
        
    }
}



//place segs
var i=0;

var SLICE=LENmax/SEGS;

repeat(SEGS){

    //SEG[i].x=x+lengthdir_x(SLICE*(i+1),ANG*(i*TWIST))
    //SEG[i].y=y+lengthdir_y(SLICE*(i+1),ANG*(i*TWIST))
    
    SEG[i].x=x+lengthdir_x(SLICE*(i+1),BASEang+((i+1)*CURVE))
    SEG[i].y=y+lengthdir_y(SLICE*(i+1),BASEang+((i+1)*CURVE))
    
    SEG[i].image_angle=90+((i*CURVE)*4)
    SEG[i].image_yscale=-1
    
    i+=1
    
}

//handles rising
if(state=RISE)
if(y&lt;ystart-60){
    speed=0
    state=BOB
    
    alarm[0]=60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
